---
apiVersion: v1
kind: Namespace
metadata:
  name: videostream


---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  namespace: videostream
  name: efs-sc
provisioner: efs.csi.aws.com
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: videostream
  name: efs-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-091002a0faf8dab1b
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: videostream
  name: efs-claim
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 1Gi


---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: videostream
  name: deployment-videostream
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-videostream
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-videostream
    spec:
      containers:
      - image: 329981824160.dkr.ecr.ap-northeast-2.amazonaws.com/my_web:latest
        imagePullPolicy: Always
        name: app-videostream
        ports:
        - containerPort: 80
        volumeMounts:
        - name: persistent-storage
          mountPath: /app
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: efs-claim


---
apiVersion: v1
kind: Service
metadata:
  namespace: videostream
  name: service-videostream
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-videostream
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: videostream
  name: ingress-videostream
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-videostream
                port:
                  number: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  namespace: videostream
  name: hpa-videostream
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: deploy-videostream
  targetCPUUtilizationPercentage: 50
